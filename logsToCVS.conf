input {
    file {
        # Путь к файлу или к папке откуда загружать логи
        path => "C:/Users/Nikolay/Desktop/P/log_chunk_2020_11_11_20_02_28_2020_11_11_20_04_38_log"
        # Начинать чтение файла с самого начала или с последней остановки
        start_position => "beginning"
    }
}

filter {
    grok {
        # Путь к папке с пользовательсими паттернами
             patterns_dir => ["./patterns"]
        # Проверяем на совпадение с 4 паттернами и записываем их в соответствующие поля
             match => { "message" => [
                 "%{PATTERN4:Pattern4}",
                 "%{PATTERN1:Pattern1}",
                 "%{PATTERN2:Pattern2}",
                 "%{PATTERN3:Pattern3}"
             ]
         }
     }
     # Убираем ненужные поля
      mutate {
          remove_field => [ "path" ]
          remove_field => [ "host" ]
          remove_field => [ "@timestamp" ]
          remove_field => [ "@version" ]
          remove_field => [ "tags" ]
          remove_field => [ "message" ]
      }
     # Если строка не соответствует паттернам, то удаяем ее
     if !([Pattern1] or [Pattern2] or [Pattern3] or [Pattern4])   {
         drop { }
     } else {
         # Дабавляем поле с отметкой времени
         grok {
             match => { "Pattern1" => [ "%{DATESTAMP:timestamp}" ] }
             match => { "Pattern2" => [ "%{DATESTAMP:timestamp}" ] }
             match => { "Pattern3" => [ "%{DATESTAMP:timestamp}" ] }
             match => { "Pattern4" => [ "%{DATESTAMP:timestamp}" ] }
         }

         # Добавляем поле с отметкой ID устройства
         mutate { add_field => { "Device_ID" => "403DEC73B458"} }

         # Добавляем поля с состоянием устройства и с ID канала
         if ([Pattern1]) {
             grok { match => { "Pattern1" => [ "%{PA5:Channel_ID}" ] } }
             mutate { add_field => { "Device_State" => "1"} }
         } else if ([Pattern2]) {
             grok { match => { "Pattern2" => [ "%{PA5:Channel_ID}" ] } }
             mutate { add_field => { "Device_State" => "2"} }
         } else if ([Pattern3]) {
             grok { match => { "Pattern3" => [ "%{PA5:Channel_ID}" ] } }
             mutate { add_field => { "Device_State" => "3"} }
         } else {
             grok { match => { "Pattern4" => [ "%{PA5:Channel_ID}" ] } }
             mutate { add_field => { "Device_State" => "4"} }
         }
     }
}

output {
    # Вывод в формате logstash
    # file { path => "C:/Users/Nikolay/Desktop/P/test.cvs" }

    # Вывод в cvs формате timestamp, Device_ID, Channel_ID, Device_State
    csv {
        fields => [ "timestamp", "Device_ID", "Channel_ID", "Device_State"]
        path => "C:/Users/Nikolay/Desktop/P/test.cvs"
    }
}
